//问题描述：找出一个数组中只出现一次的两个数字,用函数实现


//1.传统方法找一个单身狗
//#include<stdio.h>
//int main()
//{
//	int arr[] = { 1,2,3,4,5,1,2,3,4,6 };
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		int n = 0;
//		int j = 0;
//		for (j = 0; j < sz; j++)
//		{
//			if (arr[i] == arr[j])
//			{
//				n++;
//			}
//		}
//		if (n == 1)
//		{
//			printf("%d ",arr[i]);
//		}
//	}
//	return 0;
//}

//2.设计函数实现
#include<stdio.h>
#include<assert.h>
void Search(int arr[], int sz)
{
	assert(arr);
	assert(sz > 0);
	int arr2[5] = { 0 };//用来存放 2 4 6 2 4
	int arr3[5] = { 0 };//用来存放 1 3 5 1 3
	int i = 0;
	int j = 0;
	int n = 0;
	int m = 0;           
	for (i = 0; i < sz; i++)
	{
		//通过arr数组中的每个数与1按位与得到0/1进行分组
		if ((arr[i] & 1) == 0)
		{
			
			arr2[j] = arr[i];
			j++;            //将2 4 6 2 4依次存放到arr2中
			
		}
		else if ((arr[i] & 1) == 1)
		{

			arr3[n] = arr[i];
			n++;            //将1 3 5 1 3依次存放到arr3中
		}
	}
	for (i = 0; i < 5; i++)
	{
		m ^= arr2[i];
	}
	printf("%d ", m);
	m = 0;//使m的值回到0，与arr3数组中的每个元素进行按位异或
	for (i = 0; i < 5; i++)
	{
		m ^= arr3[i];
	}
	printf("%d ", m);
}
int main()
{
	int arr[] = { 1,2,3,4,5,1,2,3,4,6 };
	int sz = sizeof(arr) / sizeof(arr[0]);
     Search(arr, sz);
	return 0;
}
