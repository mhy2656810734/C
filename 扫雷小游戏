//头文件game.h   两个源文件text.c 和   game.c
#define ROW 9
#define COL 9
#define ROWS ROW+2
#define COLS COL+2
#define easy_count 10
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
void InitBoard(char board[ROWS][COLS], int rows, int cols, char ret);
void DisplayBoard(char board[ROWS][COLS], int row, int col);
void setmine(char board[ROWS][COLS], int row, int col);
void Findmine(char mine[ROWS][COLS], char show[ROWS][COLS], int row, int col);

//game.c

#include"game.h"
int get_mine_count(char mine[ROWS][COLS], int x, int y)
{
	return mine[x - 1][y - 1] +
		mine[x - 1][y] +
		mine[x - 1][y + 1] +
		mine[x][y - 1] +
		mine[x][y + 1] +
		mine[x + 1][y - 1] +
		mine[x + 1][y] +
		mine[x + 1][y + 1] - 8 * '0';//某个数减去'0'(字符0)等于它本身 某个字符数字减去字符0等于该数字
}
void InitBoard(char board[ROWS][COLS], int rows, int cols, char ret)
{
	int i = 0, j = 0;
	for (i = 0; i < rows; i++)
	{
		for (j = 0; j < cols; j++)
		{
			board[i][j] = ret;;
		}
	}
}
void DisplayBoard(char board[ROWS][COLS], int row, int col)
{
	int i = 0, j = 0;
	//打印列号
	for (i = 0; i <= row; i++)
	{
		printf("%d ", i);
	}
	printf("\n");
	for (i = 1; i <= row; i++)
	{
		//打印行号
		printf("%d ", i);
		for (j = 1; j <= col; j++)
		{
			printf("%c ", board[i][j]);
		}
		printf("\n");
	}
}
void setmine(char board[ROWS][COLS], int row, int col)
{
	int count = easy_count;//设置一个count记录累的个数
	int x = 0, y = 0;
	while (count)
	{
		x = rand() % row + 1;//使得炸弹出现在1-9行   rand让炸弹随机出现
		y = rand() % col + 1;//使得炸弹出现在1-9列；
		if (board[x][y] == '0')
		{
			board[x][y] = '1';
			count--;
		}
	}
}
void Findmine(char mine[ROWS][COLS], char show[ROWS][COLS], int row, int col)
{
	int x = 0, y = 0;
	int win=0; 
	while (win < row * col - easy_count)
	{
		printf("请输入要扫雷的坐标：>\n");
		scanf("%d%d", &x, &y);
		if (x >= 1 && x <= row && y >= 1 && y <= col)//判断输入的坐标是否合法
		{
			//分情况讨论该位置是否有雷
			//1.有雷
			if (mine[x][y] == '1')
			{
				printf("笨蛋，你被炸死了略略略略略略!!!!!\n");
				DisplayBoard(mine, row, col);
				break;
			}
			else//不是雷
			{
				//计算x，y周围有几个雷
				int count = get_mine_count(mine, x, y);
				show[x][y] = count + '0';
				DisplayBoard(show, row, col);
				win++;
			}
		}
		else
		{
			printf("输入的坐标有误！！请重新输入:>\n");
		}
	}
	if (win == row * col - easy_count)
	{
		printf("恭喜你，扫雷成功！！！\n");
	}
}


//text.c

#include"game.h"
void game()
{
	//定义一个埋雷的表格和一个展示给用户的表格
	char mine[ROWS][COLS];
	char show[ROWS][COLS];
	//初始化埋雷的表格和展示给用户的表格
	InitBoard(mine, ROWS, COLS, '0');
	InitBoard(show, ROWS, COLS, '*');
	//打印表格
	//DisplayBoard(mine, ROW, COL);
	DisplayBoard(show, ROW, COL);
	//布置雷
	setmine(mine, ROW, COL);
	//DisplayBoard(mine, ROW, COL);
	//扫雷
	Findmine(mine,show, ROW, COL);
}
void menu()
{
	printf("*********************************\n");
	printf("**1.开始游戏   0.退出游戏********\n");
	printf("*********************************\n");
}
void text()
{
	int input = 0;
	do
	{
		menu();
		srand((unsigned int)time(NULL));
		printf("请输入数字进行选择：>\n");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			game();
			break;
		case 0:
			printf("退出游戏!!\n");
			break;
		default:
			printf("输入错误，请重新选择！！！\n");
		}
	} while (input);
}
int main()
{
	text();
	return 0;
}
