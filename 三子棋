//头文件game.h
#define ROW 3
#define COL 3
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
void InitBoard(char board[ROW][COL], int row, int col);
void DisplayBoard(char board[ROW][COL], int row, int col);
void PlayerMove(char board[ROW][COL], int row, int col);
void ComputerMove(char board[ROW][COL], int row, int col);
char IsWin(char board[ROW][COL], int row, int col);
int IsFull(char board[ROW][COL], int row, int col);
//game.c的源文件



#include "game.h"
void InitBoard(char board[ROW][COL], int row, int col)
{
    int i;
    for (i = 0; i < row; i++)
    {
        int j;
        for (j = 0; j < col; j++)
        {
            board[i][j] = ' ';
        }
    }
}
void DisplayBoard(char board[ROW][COL], int row, int col)
{
    int i = 0;
    for (i = 0; i < row; i++)
    {
        int j;
        for (j = 0; j < col; j++)
            //输出第一行的数据
        {
            printf(" %c ", board[i][j]);
            if (j < col - 1)
            {
                printf("|");
            }
        }
        printf("\n");
        if (i < row - 1)
            //打印分割行
        {
            for (j = 0; j < col; j++)
            {
                printf("---");
                if (j < col - 1)
                {
                    printf("|");
                }
            }
            printf("\n");
        }
    }
}
void PlayerMove(char board[ROW][COL], int row, int col)
{
    int x=0, y=0;
    printf("玩家走：\n");
    while (1)
    {
        printf("请输入要下棋的位置：\n");
        scanf("%d %d", &x, &y);
        if (x >= 1 && x <= row && y >= 1 && y <= col)
        {
            if (board[x - 1][y - 1] == ' ')
            {
                board[x - 1][y - 1] = '*';
                break;
            }
            else
                printf("该坐标被占用!!\n");
        }
        else
            printf("您输入的坐标有误！！请重新输入：\n");
    }
}
void ComputerMove(char board[ROW][COL], int row, int col)
{
    int i, j;
    printf("电脑走： \n");
   
    while (1)
    { 
        i = rand() % row;
        j = rand() % col;
        if (board[i][j] == ' ')
        {
            board[i][j] = '#';
            break;
        }
    }
}
//返回1表示棋盘满了  返回0表示棋盘没满
int IsFull(char board[ROW][COL], int row, int col)
{
    int i, j;
    for (i = 0; i < row; i++)
    {
        for (j = 0; j < col; j++)
        {
            if (board[i][j] == ' ')
                return 0;
        }
    }
    return 1;
}
//共四种情况，*玩家获胜   #电脑获胜 C继续游戏  Q平局
char IsWin(char board[ROW][COL], int row, int col)
{
    int i, j;
    //横三行
    for (i = 0; i < row; i++)
    {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][1] != ' ')
        {
            return board[i][i];
        }
    }

    //竖三列
    for (j = 0; j < col; j++)
    {
        if (board[0][j] == board[1][j] && board[1][j] == board[2][j] && board[1][j] != ' ')
        {
            return board[1][j];
        }
    }
    //两个对角线
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[1][1] != ' ')
        return board[1][1];
    if (board[2][0] == board[1][1] && board[1][1] == board[0][2] && board[1][1] != ' ')
        return board[1][1];
    //判断是否是平局
    if (1 == IsFull(board, ROW, COL))
    {
        return 'Q';
    }
    return 'C';
}

//text.c源文件
//测试三子棋游戏
#include<stdio.h>
#include"game.h"
void game()
{
	char ret;
	char board[ROW][COL] = { 0 };
	InitBoard(board, ROW, COL);//初始化棋盘 c
	DisplayBoard(board, ROW, COL);
	ret = IsWin(board, ROW, COL);
	while (1)
	{
		PlayerMove(board, ROW, COL);
		DisplayBoard(board, ROW, COL);
		if (ret != 'C')//判断玩家是否获胜
		{
			break;
		}
		ComputerMove(board, ROW, COL);
		DisplayBoard(board, ROW, COL);
		ret = IsWin(board, ROW, COL);
		if (ret != 'C')//判断电脑是否获胜
		{
			break;
		}
	}
	if (ret == '*')
	{
		printf("玩家获胜！！\n");
	}
	else if (ret == '#')
		printf("电脑获胜！！\n");
	else
		printf("平局！！\n");

}
void menu()
{
	printf("##############################\n");
	printf("##1.开始游戏     0.退出游戏###\n");
	printf("##############################\n");
}
void text()
{
	int input = 0;
	srand((unsigned int)time(NULL));
	do {
		menu();
		printf("请选择数字： \n");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			game();
			break;
		case 0:
			printf("退出游戏\n");
			break;
		default:
			printf("输入的数字有误！！请重新输入\n");
			break;
		}
	} while (input);
}
int main()
{
	text();
	return 0;
}
