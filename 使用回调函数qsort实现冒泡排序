#include<stdio.h>
#include<stdlib.h>
#include<string.h>
//比较整数
//int cmp_int(const void* e1, const void* e2)
//{
//	return  *(int*)e1 - *(int*)e2;默认都是升序排列，倒叙可以交换减数和被减数
//}


//比较浮点型数据
//int cmp_int(const void* e1, const void* e2)
//	{
//		return  ((int)( * (float*)e1 - *(float*)e2));
//	}
//void text()
//{
//	float f[] = { 9.0,8.0,7.0,6.0,5.0,4.0 };
//	int sz = sizeof(f) / sizeof(f[0]);
//	qsort(f, sz, sizeof(f[0]), cmp_int);
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("%f ", f[i]);
//	}
//}

//int main()
//{
//	/*int arr[] = { 1,3,5,7,9,2,4,6,8,10 };
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	qsort(arr, sz,sizeof(arr[0]),cmp_int);
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ", arr[i]);
//	}*/
//	/*text();*/
//
//	return 0;
//}

struct Stu
{
	char name[10];
    int age[10];
};
int cmp_s_by_name(const void* e1, const void* e2)
{
	return strcmp(((struct Stu*)e1)->name,((struct Stu*)e2)->name);
}//strcmp用来比较两个字符串的大小
void text1()
{
	struct Stu s[3] = { {"zhang san",20},{"lisi",30},{"wang wu",18} };
	int sz = sizeof(s) / sizeof(s[0]);
	qsort(s, sz, sizeof(s[0]),cmp_s_by_name);
	int i = 0;
	for (i = 0; i < 3; i++)
	{
		printf("%s ", s[i]);
	}
}
int main()
{
	text1();
	return 0;
}
